{"version":3,"sources":["webpack:///./client/components/views/MessageBoard.jsx?a3c1"],"names":["MessageBoard","props","Component","Body","handlePageNumberClick","bind","state","offset","perPage","$","sideNav","closeOnClick","token","localStorage","getItem","decode","userId","id","limit","store","getGroupsForUser","getAllGroupsForUser","event","selected","Math","ceil","setState","userGroups","groups","dataLoading","totalNoOfGroups","meta","count","pageCount","userDetails","appInfo","allUserGroups","Object","keys","map","groupId","index","info","mapStateToProps","apiError","authState","loadedMessages","mapDispatchToProps","dispatch","loadMessages","resetRedirect","getMessages","getGroupMembers","verifyToken"],"mappings":"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","file":"0.1b828cffa6bfc0827d66.hot-update.js","sourcesContent":["/* eslint-env browser */\nimport React from 'react';\nimport ReactPaginate from 'react-paginate';\nimport { connect } from 'react-redux';\nimport jwtDecode from 'jwt-decode';\nimport 'jquery/dist/jquery';\nimport { getGroupsForUser, getMessages, getGroupMembers, verifyToken,\n  loadMessages, resetRedirect, getAllGroupsForUser\n} from '../../actions';\nimport NavBar from './partials/NavBar.jsx';\nimport Footer from './partials/Footer.jsx';\nimport GroupCard from './partials/GroupCard.jsx';\nimport '../../js/materialize';\n\n/**\n * React component that displays content of the Message Board page\n */\nclass MessageBoard extends React.Component {\n  /**\n   * Render method of React component\n   * @returns {Object} Returns the DOM object to be rendered\n   */\n  render() {\n    return (\n      <div>\n        <Body store={this.props}/>\n      </div>\n    );\n  }\n}\n\n/**\n * React component that contains the page body\n */\nclass Body extends React.Component {\n  /**\n   * Constructor initializes component parameters\n   * @param {Object} props Properties passed from parent component\n   */\n  constructor(props) {\n    super(props);\n    this.handlePageNumberClick = this.handlePageNumberClick.bind(this);\n    this.state = {\n      offset: 0,\n      perPage: 6\n    };\n  }\n  /**\n   * Component method called after a component renders\n   * @returns {undefined} This method returns nothing\n   */\n  componentDidMount() {\n    $('.button-collapse').sideNav({\n      closeOnClick: true\n    });\n    const token = localStorage.getItem('token');\n    const decode = jwtDecode(token);\n    const userId = decode.id;\n    const offset = 0;\n    const limit = this.state.perPage;\n    this.props.store.getGroupsForUser(userId, offset, limit, token);\n    this.props.store.getAllGroupsForUser(userId, token);\n  }\n  /**\n   * @param {Object} event Event fired when the pagination is clicked\n   * @returns {undefined} This method returns nothing\n   */\n  handlePageNumberClick(event) {\n    const token = localStorage.getItem('token');\n    const decode = jwtDecode(token);\n    const userId = decode.id;\n\n    const selected = event.selected;\n    const offset = Math.ceil(selected * this.state.perPage);\n    const limit = this.state.perPage;\n    this.setState({ offset }, () => {\n      this.props.store.getGroupsForUser(userId, offset, limit, token);\n    });\n  }\n  /**\n   * Render method of React component\n   * @returns {Object} Returns the DOM object to be rendered\n   */\n  render() {\n    const userGroups = this.props.store.groups.userGroups;\n    const dataLoading = this.props.store.dataLoading;\n    const totalNoOfGroups = this.props.store.groups.meta.count;\n    const limit = this.state.perPage;\n    const pageCount = Math.ceil(totalNoOfGroups / limit);\n    const userDetails = this.props.store.appInfo.userDetails;\n    const allUserGroups = this.props.store.allUserGroups.userGroups;\n    return (\n      <div id=\"body\">\n        <NavBar store={this.props.store} allUserGroups={allUserGroups} userDetails={userDetails}/>\n        <div id=\"main\">\n          {/* Groups */}\n          {\n            dataLoading ? (\n            <div className=\"preloader-wrapper loader large active\">\n              <div className=\"spinner-layer spinner-green-only\">\n                <div className=\"circle-clipper left\">\n                  <div className=\"circle\"></div>\n                </div><div className=\"gap-patch\">\n                  <div className=\"circle\"></div>\n                </div><div className=\"circle-clipper right\">\n                  <div className=\"circle\"></div>\n                </div>\n              </div>\n            </div>\n            ) : (\n              <div>\n                { !dataLoading && totalNoOfGroups === 0 ? (\n                  <div className=\"row center\">\n                    <h4 className=\"grey-text\">You don't belong to any group</h4>\n                    <a href=\"/#/creategroup\" className=\"btn\">Create One</a>\n                  </div>\n                  ) : (\n                  <div className=\"row\">\n                    <h3 className=\"board-title center black-text\">Message Board</h3>\n                    {\n                      Object.keys(userGroups).map((groupId, index) =>\n                        <GroupCard store={this.props.store}\n                        key={index} id={groupId} loading={dataLoading}\n                        groupDetails={userGroups[groupId].info}/>\n                      )\n                    }\n                  </div>\n                  )\n                }\n              </div>\n            )\n          }\n          {/* End of Groups */}\n        </div>\n        <ReactPaginate previousLabel={'<'}\n                       nextLabel={'>'}\n                       breakLabel={<a href=''>...</a>}\n                       breakClassName={'break-me pink-text'}\n                       pageCount={pageCount}\n                       marginPagesDisplayed={2}\n                       pageRangeDisplayed={5}\n                       onPageChange={this.handlePageNumberClick}\n                       containerClassName={'pagination center'}\n                       pageLinkClassName={'waves-effect'}\n                       previousLinkClassName={'waves-effect'}\n                       nextLinkClassName={'waves-effect'}\n                       subContainerClassName={'pages pagination'}\n                       activeClassName={'active pink'} />\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state =>\n  ({\n    apiError: state.apiError,\n    dataLoading: state.dataLoading,\n    groups: state.groups,\n    allUserGroups: state.allUserGroups,\n    appInfo: {\n      userDetails: state.appInfo.userDetails,\n      authState: state.appInfo.authState,\n      loadedMessages: state.appInfo.loadedMessages\n    }\n  });\n\nconst mapDispatchToProps = dispatch =>\n  ({\n    getGroupsForUser: (userId, offset, limit, token) =>\n      dispatch(getGroupsForUser(userId, offset, limit, token)),\n    loadMessages: groupId => dispatch(loadMessages(groupId)),\n    resetRedirect: () => dispatch(resetRedirect()),\n    getMessages: (groupId, token) => dispatch(getMessages(groupId, token)),\n    getGroupMembers: (groupId, token) => dispatch(getGroupMembers(groupId, token)),\n    getAllGroupsForUser: (userId, token) =>\n      dispatch(getAllGroupsForUser(userId, token)),\n    verifyToken: token => dispatch(verifyToken(token))\n  });\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageBoard);\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/views/MessageBoard.jsx"],"sourceRoot":""}