{"version":3,"sources":["webpack:///./client/components/views/SignUp.jsx?d651"],"names":["SignUp","props","Component","NavBar","Body","signUp","bind","showNotification","notificationSystem","$","sideNav","closeOnClick","notificationRef","keypress","event","which","keyCode","click","isSignedIn","store","appInfo","authState","signedIn","errorMessage","apiError","message","token","userDetails","localStorage","setItem","window","location","resetErrorLog","firstName","value","lastName","email","phone","password","level","addNotification","style","NotificationItem","DefaultStyle","margin","position","width","success","color","mapStateToProps","state","dataLoading","mapDispatchToProps","dispatch"],"mappings":"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","file":"0.842b722c661ad9bbfac3.hot-update.js","sourcesContent":["/* eslint-env browser */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport NotificationSystem from 'react-notification-system';\nimport { signUp, resetErrorLog } from '../../actions';\nimport Footer from './partials/Footer.jsx';\n\n/**\n * React component that displays the Sign Up page\n */\nclass SignUp extends React.Component {\n  /**\n   * Render method of React component\n   * @returns {Object} Returns the DOM object to be rendered\n   */\n  render() {\n    return (\n      <div>\n        <Body store={this.props}/>\n      </div>\n    );\n  }\n}\n\n\n/**\n * React componet that displays Navigation Bar\n */\nclass NavBar extends React.Component {\n  /**\n   * Render method of React component\n   * @returns {Object} Returns the DOM object to be rendered\n   */\n  render() {\n    return (\n      <div className=\"navbar-fixed\">\n        <nav className=\"pink darken-4\" role=\"navigation\">\n          <div className=\"nav-wrapper\">\n            <a href=\"#\" id=\"brand\" className=\"brand-logo\">PostIt</a>\n            <a href=\"#\" data-activates=\"mobile-demo\"\n              className=\"button-collapse\"><i className=\"material-icons\">menu</i></a>\n            <ul className=\"right hide-on-med-and-down\">\n              <li><a href=\"#\">About PostIt</a></li>\n            </ul>\n            <ul id=\"mobile-demo\" className=\"side-nav\">\n              <li>\n                <div className=\"user-details\">\n                  <div className=\"background\">\n                    <img src=\"images/fire2.png\" />\n                  </div>\n                </div>\n              </li>\n              <li><a href=\"#\"><i className=\"large material-icons black-text\">info</i>\n                About PostIt</a></li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\n/**\n * React component that loads page body\n */\nclass Body extends React.Component {\n  /**\n   * Constructor initializes component parameters\n   * @param {Object} props Properties passed from parent component\n   */\n  constructor(props) {\n    super(props);\n    this.signUp = this.signUp.bind(this);\n    this.showNotification = this.showNotification.bind(this);\n    this.notificationSystem = null;\n  }\n  /**\n   * Component method called after component has rendered to make\n   * sign in button hold page focus\n   * @returns {undefined} This method returns nothing\n   */\n  componentDidMount() {\n    // Initialize the side nav\n    $('.button-collapse').sideNav({\n      closeOnClick: true\n    });\n    // Initialize notification component\n    this.notificationSystem = this.notificationRef;\n    // Set focus to SignUp button\n    $('#signUpForm').keypress((event) => {\n      if ((event.which && event.which === 13) || (event.keyCode && event.keyCode === 13)) {\n        $('#signUpButton').click();\n        return false;\n      } else {\n        return true;\n      }\n    });\n  }\n  /**\n   * Component method called before component properties are updated,\n   * to save user token to local storage, or flash an error message if sign up failed\n   * @returns {undefined} This method returns nothing\n   */\n  componentWillUpdate() {\n    const isSignedIn = this.props.store.appInfo.authState.signedIn;\n    const errorMessage = this.props.store.apiError.message;\n    if (isSignedIn) {\n      const token = this.props.store.appInfo.userDetails.token;\n      localStorage.setItem('token', token);\n      window.location = '/#/messageboard';\n    } else {\n      if (errorMessage) {\n        this.showNotification('error', errorMessage);\n        this.props.store.resetErrorLog();\n      }\n    }\n  }\n  /**\n   * Method called to sign up a user\n   * @returns {undefined} This method returns nothing\n   */\n  signUp() {\n    const firstName = this.firstName.value;\n    const lastName = this.lastName.value;\n    const email = this.email.value;\n    const phone = this.phone.value;\n    const password = this.password.value;\n    this.props.store.signUp(firstName, lastName, email, password, phone);\n  }\n  /**\n   * @param {Sring} level The type of notification (success or failure)\n   * @param {String} message The message in the notification\n   * @returns {undefined} This method returns nothing\n   */\n  showNotification(level, message) {\n    this.notificationSystem.addNotification({\n      message,\n      level,\n    });\n  }\n  /**\n   * Render method of React component\n   * @returns {Object} Returns the DOM object to be rendered\n   */\n  render() {\n    const style = {\n      NotificationItem: {\n        DefaultStyle: {\n          margin: '100px 5px 2px 1px',\n          position: 'fixed',\n          width: '320px'\n        },\n        success: {\n          color: 'green'\n        }\n      }\n    };\n    return (\n      <div id=\"body\">\n      <NavBar/>\n      <div id=\"main\">\n        <div className=\"row\">\n          <div className=\"col s10 m6 l4 offset-s1 offset-m3 offset-l4 signup-form\">\n            <NotificationSystem className='notification'style={style}\n              ref={(notificationRef) => { this.notificationRef = notificationRef; }} />\n            <div id=\"signUpForm\" className=\"row\">\n              <div>\n                <h3 className=\"center\">Sign Up</h3>\n              </div>\n              <div className=\"input-field col s12\">\n                <input id=\"firstName\" ref={(firstName) => { this.firstName = firstName; }}\n                  type=\"text\" name=\"fname\" className=\"validate\" />\n                <label htmlFor=\"firstName\">First Name</label>\n              </div>\n              <div className=\"input-field col s12\">\n                <input id=\"lastName\" ref={(lastName) => { this.lastName = lastName; }}\n                  type=\"text\" name=\"lastName\" className=\"validate\" />\n                <label htmlFor=\"lastName\">Last Name</label>\n              </div>\n              <div className=\"input-field col s12\">\n                <input type=\"text\" ref={(phone) => { this.phone = phone; }} id=\"phone\"\n                  name=\"number\" className=\"validate\" />\n                <label htmlFor=\"phone\">Phone</label>\n              </div>\n              <div className=\"input-field col s12\">\n                <input id=\"email\" ref={(email) => { this.email = email; }}\n                  type=\"email\" name=\"email\" className=\"validate\" />\n                <label htmlFor=\"email\" data-error=\"Enter valid email\">Email</label>\n              </div>\n              <div className=\"input-field col s12\">\n                <input ref={(password) => { this.password = password; }}\n                  id=\"password\" type=\"password\" className=\"validate\" />\n                <label htmlFor=\"password\">Password</label>\n              </div>\n              <div className=\"center\">\n                <button onClick={this.signUp} id=\"signUpButton\"\n                  className=\"btn center green darken-4\" autoFocus>Sign up</button>\n              </div>\n              <div>\n                <p>Already have an account? <a href=\"/#/\" >Sign in</a></p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Footer/>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state =>\n  ({\n    apiError: state.apiError,\n    dataLoading: state.dataLoading,\n    appInfo: {\n      userDetails: state.appInfo.userDetails,\n      authState: state.appInfo.authState\n    }\n  });\n\nconst mapDispatchToProps = dispatch =>\n  ({\n    signUp: (firstName, lastName, email, password, phone) =>\n      dispatch(signUp(firstName, lastName, email, password, phone)),\n    resetErrorLog: () => dispatch(resetErrorLog())\n  });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/views/SignUp.jsx"],"sourceRoot":""}