{"version":3,"sources":["webpack:///./client/components/views/PostMessage.jsx?0581"],"names":["PostMessage","props","Component","Body","deleteMember","bind","deleteGroup","memberIdToDelete","groupIdToDelete","token","localStorage","getItem","decode","userId","id","groupId","store","match","params","getMessages","getAllGroupsForUser","getGroupMembers","$","sideNav","off","on","animate","width","modal","ready","trigger","document","e","target","is","parents","length","fadeOut","ownerId","idToDelete","redirect","apiError","yes","to","indexOf","resetRedirect","window","location","allUserGroups","groupLoaded","userGroups","groupTitle","info","title","mapStateToProps","state","dataLoading","groups","appInfo","userDetails","authState","loadedMessages","postItInfo","mapDispatchToProps","dispatch","verifyToken","loadMessages","getPostItMembers","addUser","email","adderId","postMessage","senderId","body","priority","isComment"],"mappings":";;;;;;;;;;;;;;AAEA;;;;AACA;;AACA;;AACA;;;;AAEA;;AAOA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;AAnBA;;;AAYA;;;AASA;;;IAGMA,W;;;;;;;;;;;;AACJ;;;;6BAIS;AACP,aACE;AAAA;AAAA;AACE,sCAAC,IAAD,IAAM,OAAO,KAAKC,KAAlB;AADF,OADF;AAKD;;;;EAXuB,gBAAMC,S;;AAchC;;;;;IAGMC,I;;;AACJ;;;;AAIA,gBAAYF,KAAZ,EAAmB;AAAA;;AAAA,6GACXA,KADW;;AAEjB,WAAKG,YAAL,GAAoB,OAAKA,YAAL,CAAkBC,IAAlB,QAApB;AACA,WAAKC,WAAL,GAAmB,OAAKA,WAAL,CAAiBD,IAAjB,QAAnB;AACA,WAAKE,gBAAL,GAAwB,EAAxB;AACA,WAAKC,eAAL,GAAuB,EAAvB;AALiB;AAMlB;AACD;;;;;;;;wCAIoB;AAAA;;AAClB,UAAMC,QAAQC,aAAaC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMC,SAAS,yBAAUH,KAAV,CAAf;AACA,UAAMI,SAASD,OAAOE,EAAtB;AACA,UAAMC,UAAU,KAAKd,KAAL,CAAWe,KAAX,CAAiBC,KAAjB,CAAuBC,MAAvB,CAA8BH,OAA9C;AACA;AACA,WAAKd,KAAL,CAAWe,KAAX,CAAiBG,WAAjB,CAA6BJ,OAA7B,EAAsCN,KAAtC;AACA;AACA,WAAKR,KAAL,CAAWe,KAAX,CAAiBI,mBAAjB,CAAqCP,MAArC,EAA6CJ,KAA7C;AACA;AACA,WAAKR,KAAL,CAAWe,KAAX,CAAiBK,eAAjB,CAAiCN,OAAjC,EAA0CN,KAA1C;;AAEA;AACAa,QAAE,kBAAF,EAAsBC,OAAtB;AACA;AACAD,QAAE,qBAAF,EAAyBE,GAAzB,GAA+BC,EAA/B,CAAkC,OAAlC,EAA2C,YAAM;AAC/CH,UAAE,aAAF,EAAiBI,OAAjB,CAAyB,EAAEC,OAAO,QAAT,EAAzB;AACD,OAFD;AAGAL,QAAE,QAAF,EAAYM,KAAZ,CAAkB;AAChB;AACAC,eAAO,eAACD,KAAD,EAAQE,OAAR,EAAoB;AACzB;AACA,cAAIF,MAAM,CAAN,EAASd,EAAT,KAAgB,mBAApB,EAAyC;AACvC,mBAAKP,gBAAL,GAAwBuB,QAAQ,CAAR,EAAWhB,EAAnC;AACD,WAFD,MAEO;AACL,mBAAKN,eAAL,GAAuBsB,QAAQ,CAAR,EAAWhB,EAAlC;AACD;AACF;AATe,OAAlB;AAWA;AACAQ,QAAES,QAAF,EAAYN,EAAZ,CAAe,OAAf,EAAwB,UAACO,CAAD,EAAO;AAC7B,YAAMC,SAASX,EAAEU,EAAEC,MAAJ,CAAf;AACA;AACA,YAAI,CAAEA,OAAOC,EAAP,CAAU,qBAAV,CAAN,EAAyC;AACvC,cAAI,CAACD,OAAOE,OAAP,CAAe,aAAf,EAA8BC,MAAnC,EAA2C;AACzC,gBAAI,CAACH,OAAOE,OAAP,CAAe,oBAAf,EAAqCC,MAA1C,EAAkD;AAChD,kBAAI,CAACH,OAAOE,OAAP,CAAe,iBAAf,EAAkCC,MAAvC,EAA+C;AAC7Cd,kBAAE,aAAF,EAAiBe,OAAjB;AACD;AACF;AACF;AACF;AACF,OAZD;AAaD;AACD;;;;;;;mCAIe;AACb,UAAM5B,QAAQC,aAAaC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMC,SAAS,yBAAUH,KAAV,CAAf;AACA,UAAM6B,UAAU1B,OAAOE,EAAvB;AACA,UAAMyB,aAAa,KAAKhC,gBAAxB;AACA,UAAMQ,UAAU,KAAKd,KAAL,CAAWe,KAAX,CAAiBC,KAAjB,CAAuBC,MAAvB,CAA8BH,OAA9C;AACA;AACA,WAAKd,KAAL,CAAWe,KAAX,CAAiBZ,YAAjB,CAA8BkC,OAA9B,EAAuCC,UAAvC,EAAmDxB,OAAnD,EAA4DN,KAA5D;AACD;AACD;;;;;;;kCAIc;AACZ,UAAMA,QAAQC,aAAaC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMC,SAAS,yBAAUH,KAAV,CAAf;AACA,UAAM6B,UAAU1B,OAAOE,EAAvB;AACA,UAAMC,UAAU,KAAKP,eAArB;AACA;AACA,WAAKP,KAAL,CAAWe,KAAX,CAAiBV,WAAjB,CAA6BgC,OAA7B,EAAsCvB,OAAtC,EAA+CN,KAA/C;AACD;AACD;;;;;;;6BAIS;AACP;AACA,UAAM+B,WAAW,KAAKvC,KAAL,CAAWe,KAAX,CAAiByB,QAAjB,CAA0BD,QAA3C;AACA,UAAIA,SAASE,GAAb,EAAkB;AAChB,YAAIF,SAASG,EAAT,CAAYC,OAAZ,CAAoB,aAApB,MAAuC,CAAC,CAA5C,EAA8C;AAC5C;AACA,eAAK3C,KAAL,CAAWe,KAAX,CAAiB6B,aAAjB;AACD,SAHD,MAGO;AACLC,iBAAOC,QAAP,GAAkBP,SAASG,EAA3B;AACD;AACF;AACD,UAAIK,gBAAgB,EAApB;AACA,UAAMjC,UAAU,KAAKd,KAAL,CAAWe,KAAX,CAAiBC,KAAjB,CAAuBC,MAAvB,CAA8BH,OAA9C;AACA,UAAMkC,cAAc,KAAKhD,KAAL,CAAWe,KAAX,CAAiBgC,aAAjB,CAA+BE,UAA/B,CAA0CnC,OAA1C,CAApB;AACA,UAAIoC,mBAAJ;AACA,UAAIF,WAAJ,EAAiB;AACfE,qBAAaF,YAAYG,IAAZ,CAAiBC,KAA9B;AACAL,wBAAgB,KAAK/C,KAAL,CAAWe,KAAX,CAAiBgC,aAAjB,CAA+BE,UAA/C;AACD,OAHD,MAGO;AACLC,qBAAa,YAAb;AACD;AACD,aACA;AAAA;AAAA,UAAK,IAAG,MAAR;AACE,0DAAQ,aAAa,KAAK7C,WAA1B,EAAuC,eAAe0C,aAAtD;AACE,iBAAO,KAAK/C,KAAL,CAAWe,KADpB,GADF;AAGE;AAAA;AAAA,YAAK,IAAG,MAAR;AACE;AAAA;AAAA,cAAK,IAAG,kBAAR;AACE;AAAA;AAAA,gBAAK,WAAU,kBAAf;AACE;AAAA;AAAA,kBAAQ,IAAG,oBAAX,EAAgC,WAAU,QAA1C;AAAA;AAAA;AADF,aADF;AAIE;AAAA;AAAA,gBAAK,WAAU,KAAf;AACE;AAAA;AAAA,kBAAK,WAAU,gDAAf;AAEE,oEAAU,OAAO,KAAKf,KAAL,CAAWe,KAA5B;AAFF,eADF;AAME,mEAAW,OAAO,KAAKf,KAAL,CAAWe,KAA7B;AANF;AAJF,WADF;AAeG,uEAAmB,cAAc,KAAKZ,YAAtC,GAfH;AAiBG,oEAAgB,OAAO,KAAKH,KAAL,CAAWe,KAAlC;AAjBH,SAHF;AAuBE,mEAAiB,OAAO,KAAKf,KAAL,CAAWe,KAAnC;AAvBF,OADA;AA2BD;;;;EAzIgB,gBAAMd,S;;AA4IzB,IAAMoD,kBAAkB,SAAlBA,eAAkB;AAAA,SACrB;AACCb,cAAUc,MAAMd,QADjB;AAECe,iBAAaD,MAAMC,WAFpB;AAGCC,YAAQF,MAAME,MAHf;AAICT,mBAAeO,MAAMP,aAJtB;AAKCU,aAAS;AACPC,mBAAaJ,MAAMG,OAAN,CAAcC,WADpB;AAEPC,iBAAWL,MAAMG,OAAN,CAAcE,SAFlB;AAGPC,sBAAgBN,MAAMG,OAAN,CAAcG;AAHvB,KALV;AAUCC,gBAAYP,MAAMO;AAVnB,GADqB;AAAA,CAAxB;;AAcA,IAAMC,qBAAqB,SAArBA,kBAAqB;AAAA,SACxB;AACC3C,yBAAqB,6BAACP,MAAD,EAASJ,KAAT;AAAA,aAAmBuD,SAAS,kCAAoBnD,MAApB,EAA4BJ,KAA5B,CAAT,CAAnB;AAAA,KADtB;AAECY,qBAAiB,yBAACN,OAAD,EAAUN,KAAV;AAAA,aAAoBuD,SAAS,8BAAgBjD,OAAhB,EAAyBN,KAAzB,CAAT,CAApB;AAAA,KAFlB;AAGCoC,mBAAe;AAAA,aAAMmB,SAAS,6BAAT,CAAN;AAAA,KAHhB;AAICC,iBAAa;AAAA,aAASD,SAAS,0BAAYvD,KAAZ,CAAT,CAAT;AAAA,KAJd;AAKCL,kBAAc,sBAACkC,OAAD,EAAUC,UAAV,EAAsBxB,OAAtB,EAA+BN,KAA/B;AAAA,aACZuD,SAAS,2BAAa1B,OAAb,EAAsBC,UAAtB,EAAkCxB,OAAlC,EAA2CN,KAA3C,CAAT,CADY;AAAA,KALf;AAOCH,iBAAa,qBAACgC,OAAD,EAAUvB,OAAV,EAAmBN,KAAnB;AAAA,aAA6BuD,SAAS,0BAAY1B,OAAZ,EAAqBvB,OAArB,EAA8BN,KAA9B,CAAT,CAA7B;AAAA,KAPd;AAQCU,iBAAa,qBAACJ,OAAD,EAAUN,KAAV;AAAA,aAAoBuD,SAAS,0BAAYjD,OAAZ,EAAqBN,KAArB,CAAT,CAApB;AAAA,KARd;AASCyD,kBAAc;AAAA,aAAWF,SAAS,2BAAajD,OAAb,CAAT,CAAX;AAAA,KATf;AAUCoD,sBAAkB;AAAA,aAASH,SAAS,+BAAiBvD,KAAjB,CAAT,CAAT;AAAA,KAVnB;AAWC2D,aAAS,iBAACC,KAAD,EAAQtD,OAAR,EAAiBuD,OAAjB,EAA0B7D,KAA1B;AAAA,aAAoCuD,SAAS,sBAAQK,KAAR,EAAetD,OAAf,EAAwBuD,OAAxB,EAAiC7D,KAAjC,CAAT,CAApC;AAAA,KAXV;AAYC8D,iBAAa,qBAACC,QAAD,EAAWzD,OAAX,EAAoB0D,IAApB,EAA0BC,QAA1B,EAAoCC,SAApC,EAA+ClE,KAA/C;AAAA,aACXuD,SAAS,0BAAYQ,QAAZ,EAAsBzD,OAAtB,EAA+B0D,IAA/B,EAAqCC,QAArC,EAA+CC,SAA/C,EAA0DlE,KAA1D,CAAT,CADW;AAAA;AAZd,GADwB;AAAA,CAA3B;kBAgBe,yBAAQ6C,eAAR,EAAyBS,kBAAzB,EAA6C/D,WAA7C,C","file":"0.ca1ffd558d98edc4a73a.hot-update.js","sourcesContent":["\n/* eslint-env browser */\nimport React from 'react';\nimport 'jquery/dist/jquery';\nimport { connect } from 'react-redux';\nimport jwtDecode from 'jwt-decode';\n\nimport {\n  getGroupMembers, addUser, getMessages, loadMessages,\n  resetRedirect, deleteMember, getPostItMembers,\n  deleteGroup, getAllGroupsForUser, postMessage, verifyToken\n} from '../../actions';\n\n// Partials\nimport NavBar from './partials/NavBar.jsx';\nimport GroupList from './partials/GroupList.jsx';\nimport Messages from './partials/Messages.jsx';\nimport AddMemberModal from './partials/AddMemberModal.jsx';\nimport MessageInputBox from './partials/MessageInputBox.jsx';\nimport DeleteMemberModal from './partials/DeleteMemberModal.jsx';\nimport '../../js/materialize';\n\n/**\n * React component that displays the Post Message page\n */\nclass PostMessage extends React.Component {\n  /**\n   * Render method of React component\n   * @returns {Object} Returns the DOM object to be rendered\n   */\n  render() {\n    return (\n      <div>\n        <Body store={this.props}/>\n     </div>\n    );\n  }\n}\n\n/**\n * React component that displays the body of the page\n */\nclass Body extends React.Component {\n  /**\n   * Constructor initializes component parameters\n   * @param {Object} props Properties passed from parent component\n   */\n  constructor(props) {\n    super(props);\n    this.deleteMember = this.deleteMember.bind(this);\n    this.deleteGroup = this.deleteGroup.bind(this);\n    this.memberIdToDelete = '';\n    this.groupIdToDelete = '';\n  }\n  /**\n   * Component method called after componetn renders to initialize modals\n   * @returns {undefined} This method returns nothing\n   */\n  componentDidMount() {\n    const token = localStorage.getItem('token');\n    const decode = jwtDecode(token);\n    const userId = decode.id;\n    const groupId = this.props.store.match.params.groupId;\n    // Load all messages for the group\n    this.props.store.getMessages(groupId, token);\n    // Load user groups\n    this.props.store.getAllGroupsForUser(userId, token);\n    // Load all members of the group\n    this.props.store.getGroupMembers(groupId, token);\n\n    // Initialize side nav\n    $('.button-collapse').sideNav();\n    /* Toggle group list*/\n    $('#member-list-toggle').off().on('click', () => {\n      $('#memberList').animate({ width: 'toggle' });\n    });\n    $('.modal').modal({\n      // Handle modal dialog box\n      ready: (modal, trigger) => {\n        // Check if modal is for deleting group member or entire group\n        if (modal[0].id === 'deleteMemberModal') {\n          this.memberIdToDelete = trigger[0].id;\n        } else {\n          this.groupIdToDelete = trigger[0].id;\n        }\n      },\n    });\n    // Toggle memberList\n    $(document).on('click', (e) => {\n      const target = $(e.target);\n      // Hide member list when a click is made outside of memberlist window or deleteMemberModal\n      if (!(target.is('#member-list-toggle'))) {\n        if (!target.parents('#memberList').length) {\n          if (!target.parents('#deleteMemberModal').length) {\n            if (!target.parents('#addMemberModal').length) {\n              $('#memberList').fadeOut();\n            }\n          }\n        }\n      }\n    });\n  }\n  /**\n   * Method to delete a member from a group\n   * @returns {undefined} This method returns nothing\n   */\n  deleteMember() {\n    const token = localStorage.getItem('token');\n    const decode = jwtDecode(token);\n    const ownerId = decode.id;\n    const idToDelete = this.memberIdToDelete;\n    const groupId = this.props.store.match.params.groupId;\n    // Call the redux action to delete the member\n    this.props.store.deleteMember(ownerId, idToDelete, groupId, token);\n  }\n  /**\n   * Method to delete a group\n   * @returns {undefined} This method returns nothing\n   */\n  deleteGroup() {\n    const token = localStorage.getItem('token');\n    const decode = jwtDecode(token);\n    const ownerId = decode.id;\n    const groupId = this.groupIdToDelete;\n    // Call redux action to delete the group\n    this.props.store.deleteGroup(ownerId, groupId, token);\n  }\n  /**\n   * Render method of React component\n   * @returns {Object} Returns the DOM object to be rendered\n   */\n  render() {\n    // Accessing a deleted group, or loading messages from a group you've been removed from\n    const redirect = this.props.store.apiError.redirect;\n    if (redirect.yes) {\n      if (redirect.to.indexOf('postmessage') !== -1){\n        // No page reloading when opening a different group\n        this.props.store.resetRedirect();\n      } else {\n        window.location = redirect.to;\n      }\n    }\n    let allUserGroups = {};\n    const groupId = this.props.store.match.params.groupId;\n    const groupLoaded = this.props.store.allUserGroups.userGroups[groupId];\n    let groupTitle;\n    if (groupLoaded) {\n      groupTitle = groupLoaded.info.title;\n      allUserGroups = this.props.store.allUserGroups.userGroups;\n    } else {\n      groupTitle = 'Loading...';\n    }\n    return (\n    <div id=\"body\" >\n      <NavBar deleteGroup={this.deleteGroup} allUserGroups={allUserGroups}\n        store={this.props.store}/>\n      <div id=\"main\" >\n        <div id=\"main-postmessage\">\n          <div className=\"memberListToggle\">\n            <button id=\"member-list-toggle\" className=\"btn s4\">Group Info</button>\n          </div>\n          <div className=\"row\">\n            <div className=\"col s12 m8 offset-m2 l8 offset-l2 messageboard\">\n              {/* Messages */}\n              <Messages store={this.props.store}/>\n            </div>\n            {/* Side bar, visible by toggle */}\n            <GroupList store={this.props.store}/>\n          </div>\n        </div>\n        {/* Modal to handle deleting a member from a group */}\n         <DeleteMemberModal deleteMember={this.deleteMember}/>\n        {/* Modal to handle adding a member to a group */}\n         <AddMemberModal store={this.props.store}/>\n        {/* Message Input Box */}\n      </div>\n      <MessageInputBox store={this.props.store}/>\n    </div>\n    );\n  }\n}\n\nconst mapStateToProps = state =>\n  ({\n    apiError: state.apiError,\n    dataLoading: state.dataLoading,\n    groups: state.groups,\n    allUserGroups: state.allUserGroups,\n    appInfo: {\n      userDetails: state.appInfo.userDetails,\n      authState: state.appInfo.authState,\n      loadedMessages: state.appInfo.loadedMessages\n    },\n    postItInfo: state.postItInfo\n  });\n\nconst mapDispatchToProps = dispatch =>\n  ({\n    getAllGroupsForUser: (userId, token) => dispatch(getAllGroupsForUser(userId, token)),\n    getGroupMembers: (groupId, token) => dispatch(getGroupMembers(groupId, token)),\n    resetRedirect: () => dispatch(resetRedirect()),\n    verifyToken: token => dispatch(verifyToken(token)),\n    deleteMember: (ownerId, idToDelete, groupId, token) =>\n      dispatch(deleteMember(ownerId, idToDelete, groupId, token)),\n    deleteGroup: (ownerId, groupId, token) => dispatch(deleteGroup(ownerId, groupId, token)),\n    getMessages: (groupId, token) => dispatch(getMessages(groupId, token)),\n    loadMessages: groupId => dispatch(loadMessages(groupId)),\n    getPostItMembers: token => dispatch(getPostItMembers(token)),\n    addUser: (email, groupId, adderId, token) => dispatch(addUser(email, groupId, adderId, token)),\n    postMessage: (senderId, groupId, body, priority, isComment, token) =>\n      dispatch(postMessage(senderId, groupId, body, priority, isComment, token))\n  });\nexport default connect(mapStateToProps, mapDispatchToProps)(PostMessage);\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/views/PostMessage.jsx"],"sourceRoot":""}