{"version":3,"sources":["webpack:///./client/components/views/partials/SignInForm.jsx?21ef"],"names":["SignInForm","props","signIn","bind","showNotification","notificationSystem","notificationRef","$","keypress","event","which","keyCode","click","button","focus","isSignedIn","store","appInfo","authState","signedIn","errorMessage","apiError","message","token","userDetails","localStorage","setItem","window","location","resetErrorLog","email","value","password","level","addNotification","dataLoading","style","NotificationItem","DefaultStyle","margin","position","width","success","color","Component"],"mappings":"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","file":"0.5a4f817443d8b1c6bc83.hot-update.js","sourcesContent":["/* eslint-env browser */\nimport React from 'react';\nimport NotificationSystem from 'react-notification-system';\n\n/**\n * React component to display the sign in form\n */\nexport default class SignInForm extends React.Component {\n  /**\n   * Constructor initializes component parameters\n   * @param {Object} props Properties passed from parent component\n   */\n  constructor(props) {\n    super(props);\n    this.signIn = this.signIn.bind(this);\n    this.showNotification = this.showNotification.bind(this);\n    this.notificationSystem = null;\n  }\n  /**\n   * Component method called after component renders, to set page focus\n   * to sign in button\n   * @returns {undefined} This method returns nothing\n   */\n  componentDidMount() {\n    // Initialize notification component\n    this.notificationSystem = this.notificationRef;\n    // Set focus to Sign in button\n    $('.signin-form').keypress((event) => {\n      if ((event.which && event.which === 13) || (event.keyCode && event.keyCode === 13)) {\n        $('#signInButton').click();\n        return false;\n      } else {\n        return true;\n      }\n    });\n  }\n  /**\n   * Component method called before component receives new properties\n   * @returns {undefined} This method returns nothing\n   */\n  componentWillUpdate() {\n    this.button.focus();\n    const isSignedIn = this.props.store.appInfo.authState.signedIn;\n    const errorMessage = this.props.store.apiError.message;\n    if (isSignedIn) {\n      const token = this.props.store.appInfo.userDetails.token;\n      localStorage.setItem('token', token);\n      window.location = '/#/messageboard';\n    } else {\n      if (errorMessage) {\n        this.showNotification('error', errorMessage);\n        this.props.store.resetErrorLog();\n      }\n    }\n  }\n  /**\n   * Method called to send user auth data to the API\n   * @returns {undefined} This method returns nothing\n   */\n  signIn() {\n    const email = this.email.value;\n    const password = this.password.value;\n    this.props.store.signIn(email, password);\n  }\n  /**\n   * \n   * @param {String} level The severity of the notification\n   * @param {String} message The message to be displayed by the notification\n   * @returns {undefined} This method returns nothing\n   */\n  showNotification(level, message) {\n    this.notificationSystem.addNotification({\n      message,\n      level\n    });\n  }\n  /**\n   * Component method called to render page\n   * @returns {Object} returns the DOM object to be displayed\n   */\n  render() {\n    const dataLoading = this.props.store.dataLoading;\n    // Style for notification\n    const style = {\n      NotificationItem: {\n        DefaultStyle: {\n          margin: '100px 5px 2px 1px',\n          position: 'fixed',\n          width: '320px'\n        },\n        success: {\n          color: 'red'\n        }\n      }\n    };\n    return (\n      <div id=\"signinform\" className=\"col s12 m6 l5\">\n        {\n          dataLoading ? (\n            <div className=\"signin-form\">\n              <div className=\"row\">\n                <NotificationSystem className='notification' style={style}\n                  ref={(notificationRef) => { this.notificationRef = notificationRef; }} />\n                <div>\n                  <h3 className=\"center\">Sign In</h3>\n                </div>\n                <div className=\"input-field col s12\">\n                  <input id=\"email\" ref={(email) => { this.email = email; }}\n                  type=\"email\" className=\"validate\" ></input>\n                  <label htmlFor=\"email\" data-error=\"Enter valid email\">Email</label>\n                </div>\n                <div className=\"input-field col s12\">\n                  <input id=\"password\" ref={(password) => { this.password = password; }}\n                    type=\"password\" className=\"validate\" />\n                  <label htmlFor=\"password\">Password</label>\n                </div>\n                <div className=\"col s12 center\">\n                  <button id=\"signInButton\" onClick={this.signIn}\n                    className=\"btn green darken-4\"\n                    ref={(button) => { this.button = button; }} >Sign in</button>\n                </div>\n                <br /><br />\n                <div className=\"col s12\">\n                  <input id=\"signedin\" className=\"teal-text\" type=\"checkbox\" name=\"signedin\" />\n                  <label htmlFor=\"signedin\">Keep me signed in</label>\n                </div>\n                <div>\n                  <p>Don't have an account? <a href=\"/signup\">Sign up</a></p>\n                </div>\n              </div>\n              <div className=\"userlist-preloader\">\n                <div className=\"preloader-wrapper loader big active valign-wrapper\">\n                  <div className=\"spinner-layer spinner-white-only\">\n                    <div className=\"circle-clipper left\">\n                    <div className=\"circle\"></div>\n                    </div>\n                    <div className=\"gap-patch\">\n                    <div className=\"circle\"></div>\n                    </div>\n                    <div className=\"circle-clipper right\">\n                    <div className=\"circle\"></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n          <div className=\"signin-form\">\n            <div className=\"row\">\n              <NotificationSystem className='notification' style={style}\n                ref={(notificationRef) => { this.notificationRef = notificationRef; }} />\n              <div>\n                <h3 className=\"center\">Sign In</h3>\n              </div>\n              <div className=\"input-field col s12\">\n                <input id=\"email\" ref={(email) => { this.email = email; }} type=\"email\"\n                  className=\"validate\" ></input>\n                <label htmlFor=\"email\" data-error=\"Enter valid email\">Email</label>\n              </div>\n              <div className=\"input-field col s12\">\n                <input id=\"password\" ref={(password) => { this.password = password; }}\n                  type=\"password\" className=\"validate\" />\n                <label htmlFor=\"password\">Password</label>\n              </div>\n              <div className=\"col s12 center\">\n                <button id=\"signInButton\" onClick={this.signIn} className=\"btn green darken-4\"\n                  ref={(button) => { this.button = button; }} >Sign in</button>\n              </div>\n              <br /><br />\n              <div className=\"col s12\">\n                <input id=\"signedin\" className=\"teal-text\" type=\"checkbox\" name=\"signedin\" />\n                <label htmlFor=\"signedin\">Keep me signed in</label>\n              </div>\n              <div>\n                <p>Don't have an account? <a href=\"/#/signup\">Sign up</a></p>\n              </div>\n            </div>\n          </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/views/partials/SignInForm.jsx"],"sourceRoot":""}