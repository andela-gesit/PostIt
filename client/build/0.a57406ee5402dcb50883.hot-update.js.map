{"version":3,"sources":["webpack:///./client/components/views/CreateGroup.jsx?c7fa"],"names":["CreateGroup","props","Component","Body","switchTab","bind","addMember","createGroup","showNotification","selectedMembers","registeredMembers","$","sideNav","closeOnClick","click","e","notificationSystem","notificationRef","token","localStorage","getItem","decode","userId","id","store","getPostItMembers","getAllGroupsForUser","allUsers","postItInfo","members","postItMembers","redirect","apiError","errorMessage","message","yes","resetRedirect","window","location","to","resetErrorLog","level","addNotification","title","value","description","creatorId","button","tabName","tabcontent","document","getElementsByClassName","i","length","style","display","tablinks","className","replace","refs","selected","memberEmail","push","index","indexOf","splice","NotificationItem","DefaultStyle","margin","position","width","success","color","dataLoading","allUserGroups","userGroups","Object","keys","map","RegisteredMember","addOrRemove","email","userInfo","firstName","lastName","mapStateToProps","state","groups","appInfo","userDetails","authState","loadedMessages","mapDispatchToProps","dispatch","verifyToken","getMessages","groupId","loadMessages","getGroupMembers","getGroupsForUser","offset","limit"],"mappings":"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","file":"0.a57406ee5402dcb50883.hot-update.js","sourcesContent":["/* eslint-env browser */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport 'jquery';\nimport jwtDecode from 'jwt-decode';\nimport NotificationSystem from 'react-notification-system';\nimport {\n  getGroupsForUser, getAllGroupsForUser, resetErrorLog,\n  getMessages, loadMessages, resetRedirect,\n  getPostItMembers, createGroup, verifyToken,\n  getGroupMembers,\n} from '../../actions';\n\n// Partials\nimport Footer from './partials/Footer.jsx';\nimport NavBar from './partials/NavBar.jsx';\n\n\n/**\n * React component that displays the page for creating a new group\n */\nclass CreateGroup extends React.Component {\n  /**\n   * Render method of React component\n   * @returns {Object} Returns the DOM object to be rendered\n   */\n  render() {\n    return (\n      <div>\n        <Body store={this.props}/>\n      </div>\n    );\n  }\n}\n\n/**\n * React component for displaying page body\n */\nclass Body extends React.Component {\n  /**\n   * Constructor initializes component parameters\n   * @param {Object} props Properties passed from parent component\n   */\n  constructor(props) {\n    super(props);\n    this.switchTab = this.switchTab.bind(this);\n    this.addMember = this.addMember.bind(this);\n    this.createGroup = this.createGroup.bind(this);\n    this.showNotification = this.showNotification.bind(this);\n    this.selectedMembers = [];\n    this.registeredMembers = {};\n  }\n  /**\n   * React component method called after component render\n   * @return {undefined} this method returns nothing\n   */\n  componentDidMount() {\n    // Initialize navbar\n    $('.button-collapse').sideNav({\n      closeOnClick: true\n    });\n    // Load a default tab for the createGroup page\n    try {\n      $('#defaultTab')[0].click();\n    } catch (e) { return false; }\n    // Bind the notifications component\n    this.notificationSystem = this.notificationRef;\n    // Load all registered members\n    const token = localStorage.getItem('token');\n    const decode = jwtDecode(token);\n    const userId = decode.id;\n    this.props.store.getPostItMembers(token);\n    this.props.store.getAllGroupsForUser(userId, token);\n  }\n  /**\n   * React component method called before componet receives new props\n   * @returns {undefined} this method returns nothing\n   */\n  componentWillUpdate() {\n    const allUsers = this.props.store.postItInfo.members.postItMembers;\n    const redirect = this.props.store.apiError.redirect;\n    const errorMessage = this.props.store.apiError.message;\n    this.registeredMembers = allUsers;\n    if (redirect.yes) {\n      // Reset state of redirect property\n      this.props.store.resetRedirect();\n      window.location = redirect.to;\n    } else {\n      if (errorMessage) {\n        // Empty the array of selected members\n        this.selectedMembers = [];\n        this.showNotification('error', errorMessage);\n        // Reset error log\n        this.props.store.resetErrorLog();\n      }\n    }\n  }\n  /**\n   * Method to display notifications\n   * @param {String} level the severity of the notification\n   * @param {String} message the message to be diplayed\n   * @return {undefined} this method returns nothing\n   */\n  showNotification(level, message) {\n    this.notificationSystem.addNotification({\n      message,\n      level\n    });\n  }\n  /**\n   * Method for sending new group details to the api\n   * @returns {undefined} This method returns nothing\n   */\n  createGroup() {\n    const title = this.title.value;\n    const description = this.description.value;\n    const token = localStorage.getItem('token');\n    const decode = jwtDecode(token);\n    const creatorId = decode.id;\n    const selectedMembers = this.selectedMembers;\n    this.props.store.createGroup(creatorId, title, description, selectedMembers, token);\n  }\n  /**\n   * This method handles switching tabs in this react component\n   * @param {String} button The button that was clicked\n   * @param {String} tabName The div for the selected tab\n   * @returns {undefined} This method returns nothing\n   */\n  switchTab(button, tabName) {\n    const tabcontent = document.getElementsByClassName('tabcontent');\n    for (let i = 0; i < tabcontent.length; i += 1) {\n      tabcontent[i].style.display = 'none';\n    }\n    const tablinks = document.getElementsByClassName('tablinks');\n    for (let i = 0; i < tablinks.length; i += 1) {\n      tablinks[i].className = tablinks[i].className.replace(' active', '');\n    }\n    this.refs[tabName].style.display = 'block';\n    this.refs[button].className += ' active';\n  }\n  /**\n   * Method to add a member to the list of selected members\n   * @param {Boolean} selected indicates if a member was selected or deselected\n   * @param {String} memberEmail Email of member to be added\n   * @returns {undefined} this method returns nothing\n   */\n  addMember(selected, memberEmail) {\n    if (selected) {\n      // Add member\n      this.selectedMembers.push(memberEmail);\n    } else {\n      // Remove member if added earlier\n      const index = this.selectedMembers.indexOf(memberEmail);\n      this.selectedMembers.splice(index, 1);\n    }\n  }\n  /**\n   * Render method of React component\n   * @returns {Object} Returns the DOM object to be rendered\n   */\n  render() {\n    const style = {\n      NotificationItem: {\n        DefaultStyle: {\n          margin: '100px 5px 2px 1px',\n          position: 'fixed',\n          width: '320px'\n        },\n        success: {\n          color: 'red'\n        }\n      }\n    };\n    const dataLoading = this.props.store.dataLoading;\n    const allUserGroups = this.props.store.allUserGroups.userGroups;\n    return (\n      <div id=\"body\">\n        <NavBar store={this.props.store} allUserGroups={allUserGroups}/>\n        <NotificationSystem className='notification' style={style}\n          ref={(notificationRef) => { this.notificationRef = notificationRef; }} />\n        <div id=\"main\">\n          <div className=\"tab\">\n            <button className=\"tablinks\" id=\"defaultTab\" ref=\"defaultTab\"\n              onClick={() => this.switchTab('defaultTab', 'info')}>Group info</button>\n            <button className=\"tablinks\" id=\"add-members\" ref=\"add-members\"\n              onClick={() => this.switchTab('add-members', 'members')}>Add members</button>\n          </div>\n          { dataLoading ? (\n              <div id=\"info\" ref=\"info\" className=\"tabcontent\">\n                <div className=\"row\">\n                  <div className=\"col s12 m8 offset-m2 offset-l3 l6\">\n                    <div>\n                      <div className=\"preloader-wrapper loader big active valign-wrapper\">\n                        <div className=\"spinner-layer spinner-white-only\">\n                          <div className=\"circle-clipper left\">\n                          <div className=\"circle\"></div>\n                          </div>\n                          <div className=\"gap-patch\">\n                          <div className=\"circle\"></div>\n                          </div>\n                          <div className=\"circle-clipper right\">\n                          <div className=\"circle\"></div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div id=\"info\" ref=\"info\" className=\"tabcontent\">\n                <div className=\"row\">\n                  <div className=\"col s12 m8 offset-m2 offset-l3 l6\">\n                    <div className=\"group-details\">\n                      <h4 className=\"center\">Enter group details</h4>\n                      <div>\n                        <div>\n                          <input type=\"text\" ref={(title) => { this.title = title; }}\n                            name=\"group-title\" placeholder=\"Group Title\" />\n                        </div>\n                        <div>\n                          <textarea id=\"groupDescription\"\n                            ref={(description) => { this.description = description; }}\n                            type=\"text\" className=\"materialize-textarea\" placeholder=\"Description\"\n                            name=\"group-desc\" defaultValue={''} />\n                        </div>\n                      </div>\n                      <button className=\"btn light-green darken-4\"\n                        onClick={() => this.switchTab('add-members', 'members')}>Next &gt;&gt;</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )\n          }\n          <div id=\"members\" ref=\"members\" className=\"tabcontent\">\n            <div className=\"row\">\n              <div className=\"col s12 m8 offset-m2 l6 offset-l3\">\n          { /* Load spinner while contacting server */ }\n          {dataLoading ? (\n          <div>\n              <div>\n                <div className=\"classListHolder\">\n                  <ul className=\"collection with-header registeredMembersList\">\n                    <li className=\"collection-header\"><h4 className=\"center\">Add members</h4></li>\n                    <li className=\"collection-item\">\n                      <input id=\"cb1\" type=\"checkbox\" disabled />\n                      <label htmlFor=\"cb1\" className=\"black-text\">\n                        <small className=\"grey-text\"></small></label>\n                    </li>\n                    <li className=\"collection-item\">\n                      <input id=\"cb2\" type=\"checkbox\" disabled />\n                      <label htmlFor=\"cb2\" className=\"black-text\">\n                        <small className=\"grey-text\"></small></label>\n                    </li>\n                    <li className=\"collection-item\">\n                      <input id=\"cb3\" type=\"checkbox\" disabled />\n                      <label htmlFor=\"cb3\" className=\"black-text\">\n                        <small className=\"grey-text\"></small></label>\n                    </li>\n                    <li className=\"collection-item\">\n                      <input id=\"cb4\" type=\"checkbox\" disabled />\n                      <label htmlFor=\"cb4\" className=\"black-text\">\n                        <small className=\"grey-text\"></small></label>\n                    </li>\n                  </ul>\n                  <div className=\"row\">\n                    <button className=\"btn col s8 offset-s2 m5 l5 light-green darken-4\"\n                      onClick={() => this.switchTab('defaultTab', 'info')}>&lt;&lt; Group info</button>\n                    <div className=\"col s12 m2 s2\"><br /></div>\n                    <button disabled className=\"btn col s8 offset-s2 m5 l5 light-green darken-4\">\n                      Create group</button>\n                  </div>\n                </div>\n              </div>\n              <div className=\"userlist-preloader\">\n                <div className=\"preloader-wrapper big loader active valign-wrapper\">\n                  <div className=\"spinner-layer spinner-white-only\">\n                    <div className=\"circle-clipper left\">\n                    <div className=\"circle\"></div>\n                    </div>\n                    <div className=\"gap-patch\">\n                    <div className=\"circle\"></div>\n                    </div>\n                    <div className=\"circle-clipper right\">\n                    <div className=\"circle\"></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n          </div>\n          ) : (\n            <div>\n              <div>\n                <div className=\"classListHolder\">\n                  <ul className=\"collection with-header registeredMembersList\">\n                    <li className=\"collection-header\"><h4 className=\"center\">Add members</h4></li>\n                    {\n                      Object.keys(this.registeredMembers).map((userId, index) =>\n                        <RegisteredMember addMember={this.addMember} key={index}\n                        id={userId} userInfo={this.registeredMembers[userId]}/>\n                      )\n                    }\n                  </ul>\n                  <div className=\"row\">\n                    <button className=\"btn col s8 offset-s2 m5 l5 light-green darken-4\"\n                      onClick={() => this.switchTab('defaultTab', 'info')}>&lt;&lt; Group info\n                    </button>\n                    <div className=\"col s12 m2 s2\"><br /></div>\n                    <button onClick={this.createGroup}\n                      className=\"btn col s8 offset-s2 m5 l5 light-green darken-4\">\n                      Create group\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n              </div>\n            </div>\n          </div>\n\n        </div>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\n/**\n *  Component to contain a member loaded from the database\n */\nclass RegisteredMember extends React.Component {\n  /**\n   * @param {Object} props component props passed from parent component\n   */\n  constructor(props) {\n    super(props);\n    this.selected = false;\n    this.addOrRemove = this.addOrRemove.bind(this);\n  }\n  /**\n   * Method to add a member to a group\n   * @param {String} email Email of member to be added\n   * @returns {undefined} This method returns nothing\n   */\n  addOrRemove(email) {\n    this.selected = !this.selected;\n    this.props.addMember(this.selected, email);\n  }\n  /**\n   * Render method of React component\n   * @returns {Object} Returns the DOM object to be rendered\n   */\n  render() {\n    const userInfo = this.props.userInfo;\n    return (\n      <li className=\"collection-item\">\n        <input id={this.props.userInfo.email}\n          type=\"checkbox\"\n          onClick={() => this.addOrRemove(this.props.userInfo.email)}\n          ref={this.props.userInfo.email} />\n        <label className=\"brown-text\" htmlFor={this.props.userInfo.email}>\n          {userInfo.firstName} {userInfo.lastName}\n          <small className=\"red-text\"> { this.props.userInfo.email }</small>\n        </label>\n      </li>\n    );\n  }\n}\n\nconst mapStateToProps = state => (\n  {\n    apiError: state.apiError,\n    dataLoading: state.dataLoading,\n    groups: state.groups,\n    allUserGroups: state.allUserGroups,\n    appInfo: {\n      userDetails: state.appInfo.userDetails,\n      authState: state.appInfo.authState,\n      loadedMessages: state.appInfo.loadedMessages\n    },\n    postItInfo: state.postItInfo\n  }\n);\n\n\nconst mapDispatchToProps = dispatch =>\n  ({\n    resetErrorLog: () => dispatch(resetErrorLog()),\n    resetRedirect: () => dispatch(resetRedirect()),\n    verifyToken: token => dispatch(verifyToken(token)),\n    getPostItMembers: token => dispatch(getPostItMembers(token)),\n    getAllGroupsForUser: (userId, token) => dispatch(getAllGroupsForUser(userId, token)),\n    getMessages: (groupId, token) => dispatch(getMessages(groupId, token)),\n    loadMessages: groupId => dispatch(loadMessages(groupId)),\n    getGroupMembers: (groupId, token) => dispatch(getGroupMembers(groupId, token)),\n    createGroup: (creatorId, title, description, selectedMembers, token) =>\n      dispatch(createGroup(creatorId, title, description, selectedMembers, token)),\n    getGroupsForUser: (userId, offset, limit, token) =>\n    dispatch(getGroupsForUser(userId, offset, limit, token))\n  });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateGroup);\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/views/CreateGroup.jsx"],"sourceRoot":""}