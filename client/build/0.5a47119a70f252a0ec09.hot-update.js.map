{"version":3,"sources":["webpack:///./client/components/views/partials/Groups.jsx?b0d2"],"names":["Groups","allUserGroups","props","Object","keys","map","groupId","index","store","info","Component","UserGroup","loadMessagesAndMembers","bind","redirect","apiError","path","match","yes","to","indexOf","appInfo","loadedMessages","localStorage","setItem","resetRedirect","window","location","event","target","id","token","getItem","decode","userId","loadMessages","getMessages","getAllGroupsForUser","getGroupMembers","groupDetails","title"],"mappings":";;;;;;;;;;;;;;AACA;;;;AACA;;;;;;;;;;+eAFA;;;AAIA;;;IAGqBA,M;;;;;;;;;;;;AACnB;;;;6BAIS;AAAA;;AACP,UAAMC,gBAAgB,KAAKC,KAAL,CAAWD,aAAjC;AACA,aACE;AAAA;AAAA,UAAI,WAAU,eAAd;AAEIE,eAAOC,IAAP,CAAYH,aAAZ,EAA2BI,GAA3B,CAA+B,UAACC,OAAD,EAAUC,KAAV;AAAA,iBAC7B,8BAAC,SAAD,IAAW,OAAO,OAAKL,KAAL,CAAWM,KAA7B,EAAoC,KAAKD,KAAzC;AACE,0BAAcN,cAAcK,OAAd,EAAuBG,IADvC,GAD6B;AAAA,SAA/B;AAFJ,OADF;AAUD;;;;EAjBiC,gBAAMC,S;;AAoB1C;;;;;kBApBqBV,M;;IAuBfW,S;;;AACJ;;;AAGA,qBAAYT,KAAZ,EAAmB;AAAA;;AAAA,uHACXA,KADW;;AAEjB,WAAKU,sBAAL,GAA8B,OAAKA,sBAAL,CAA4BC,IAA5B,QAA9B;AAFiB;AAGlB;AACD;;;;;;;;yCAIqB;AACnB,UAAMC,WAAW,KAAKZ,KAAL,CAAWM,KAAX,CAAiBO,QAAjB,CAA0BD,QAA3C;AACA,UAAME,OAAO,KAAKd,KAAL,CAAWM,KAAX,CAAiBS,KAAjB,CAAuBD,IAApC;AACA;AACA,UAAIA,SAAS,cAAT,IAA2BF,SAASI,GAAxC,EAA6C;AAC3C;AACA,YAAIJ,SAASK,EAAT,CAAYC,OAAZ,CAAoB,aAApB,MAAuC,CAAC,CAA5C,EAA+C;AAC7C,cAAMd,UAAU,KAAKJ,KAAL,CAAWM,KAAX,CAAiBa,OAAjB,CAAyBC,cAAzB,CAAwChB,OAAxD;AACAiB,uBAAaC,OAAb,CAAqB,SAArB,EAAgClB,OAAhC,EAF6C,CAEH;AAC3C;AACD,aAAKJ,KAAL,CAAWM,KAAX,CAAiBiB,aAAjB;AACAC,eAAOC,QAAP,GAAkBb,SAASK,EAA3B;AACD;AACF;AACD;;;;;;;2CAIuBS,K,EAAO;AAC5B,UAAMtB,UAAUsB,MAAMC,MAAN,CAAaC,EAA7B;AACA,UAAMC,QAAQR,aAAaS,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMC,SAAS,yBAAUF,KAAV,CAAf;AACA,UAAMG,SAASD,OAAOH,EAAtB;AACA;AACA,WAAK5B,KAAL,CAAWM,KAAX,CAAiB2B,YAAjB,CAA8B7B,OAA9B;AACA,WAAKJ,KAAL,CAAWM,KAAX,CAAiB4B,WAAjB,CAA6B9B,OAA7B,EAAsCyB,KAAtC;;AAEA;AACA,WAAK7B,KAAL,CAAWM,KAAX,CAAiB6B,mBAAjB,CAAqCH,MAArC,EAA6CH,KAA7C;AACA;AACA,WAAK7B,KAAL,CAAWM,KAAX,CAAiB8B,eAAjB,CAAiChC,OAAjC,EAA0CyB,KAA1C;AACAR,mBAAaC,OAAb,CAAqB,SAArB,EAAgClB,OAAhC;AACD;AACD;;;;;;;6BAIS;AACP,UAAMiC,eAAe,KAAKrC,KAAL,CAAWqC,YAAhC;AACA,aACC;AAAA;AAAA;AAAI;AAAA;AAAA,YAAG,SAAS,KAAK3B,sBAAjB,EAAyC,IAAI2B,aAAaT,EAA1D;AACA;AAAA;AAAA,cAAG,WAAU,0BAAb;AAAA;AAAA,WADA;AAC2DS,uBAAaC;AADxE;AAAJ,OADD;AAID;;;;EAvDqB,gBAAM9B,S","file":"0.5a47119a70f252a0ec09.hot-update.js","sourcesContent":["/* eslint-env browser */\nimport React from 'react';\nimport jwtDecode from 'jwt-decode';\n\n/**\n * React component to hold the groups a user belongs to\n */\nexport default class Groups extends React.Component {\n  /**\n   * Render method of React component\n   * @returns {undefined} This function returns nothing\n   */\n  render() {\n    const allUserGroups = this.props.allUserGroups;\n    return (\n      <ul className=\"list-side-nav\">\n        {\n          Object.keys(allUserGroups).map((groupId, index) =>\n            <UserGroup store={this.props.store} key={index}\n              groupDetails={allUserGroups[groupId].info} />\n          )\n        }\n      </ul>\n    );\n  }\n}\n\n/**\n * React component that holds details of each group a user belongs to\n */\nclass UserGroup extends React.Component {\n  /**\n   * @param {Object} props Component properties passed from parent component\n   */\n  constructor(props) {\n    super(props);\n    this.loadMessagesAndMembers = this.loadMessagesAndMembers.bind(this);\n  }\n  /**\n   * method called when component properties are changed\n   * @returns {undefined} This method returns nothing\n   */\n  componentDidUpdate() {\n    const redirect = this.props.store.apiError.redirect;\n    const path = this.props.store.match.path;\n    // Check to see what page is loading the group. /postmessage route shouldn't reload page\n    if (path !== '/postmessage' && redirect.yes) {\n      // If page is redirecting to postmessage page\n      if (redirect.to.indexOf('postmessage') !== -1) {\n        const groupId = this.props.store.appInfo.loadedMessages.groupId;\n        localStorage.setItem('groupId', groupId); // Save id of group to local storage\n      }\n      this.props.store.resetRedirect();\n      window.location = redirect.to;\n    }\n  }\n  /**\n   * @param {Object} event fired when the link to load details of a group is clicked\n   * @returns {undefined} This method returns nothing\n   */\n  loadMessagesAndMembers(event) {\n    const groupId = event.target.id;\n    const token = localStorage.getItem('token');\n    const decode = jwtDecode(token);\n    const userId = decode.id;\n    // Load messages into the conversation page\n    this.props.store.loadMessages(groupId);\n    this.props.store.getMessages(groupId, token);\n\n    // Load user groups\n    this.props.store.getAllGroupsForUser(userId, token);\n    // Load all members of the group\n    this.props.store.getGroupMembers(groupId, token);\n    localStorage.setItem('groupId', groupId);\n  }\n  /**\n   * Render method of React component\n   * @returns {Object} Returns the DOM object to be rendered\n   */\n  render() {\n    const groupDetails = this.props.groupDetails;\n    return (\n     <li><a onClick={this.loadMessagesAndMembers} id={groupDetails.id} >\n         <i className=\"material-icons teal-text\">people_outline</i>{groupDetails.title}</a></li>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./client/components/views/partials/Groups.jsx"],"sourceRoot":""}